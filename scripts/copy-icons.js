import fs from 'node:fs'
import path from 'node:path'
import { fileURLToPath } from 'node:url'

const __dirname = path.dirname(fileURLToPath(import.meta.url))

// Configuration
const SOURCE_DIR = path.join(__dirname, '../node_modules/remixicon/icons')
const DEST_DIR = path.join(__dirname, '../src/assets/icons')
const SNIPPETS_DIR = path.join(__dirname, '../snippets')
const ICON_EXTENSION = '.svg'
const ICONS_NEEDED = [
  'shopping-cart-line',
  'user-line',
  'search-line',
  'heart-line',
  'menu-line',
  'close-line',
  'arrow-right-line',
  'star-line'
]

// Function to find icon file recursively
const findIconFile = (iconName, dir) => {
  const files = fs.readdirSync(dir)

  for (const file of files) {
    const filePath = path.join(dir, file)
    const stat = fs.statSync(filePath)

    if (stat.isDirectory()) {
      const found = findIconFile(iconName, filePath)

      if (found) {
        return found
      }
    } else if (file === `${iconName}${ICON_EXTENSION}`) {
      return filePath
    }
  }

  return null
}

const generateIconComponent = (iconPaths) => {
  const iconCases = iconPaths.map(({ name, content }) => {
    // Clean up icon name for case statement
    const cleanName = name.replace('-line', '').replace('-', '_')
    
    return `  {% when '${cleanName}' %}
    ${content}`
  }).join('\n')

  return `{% comment %}
  IMPORTANT: This snippet is automatically generated by scripts/copy-icons.js.
  Do not attempt to modify this file directly, as any changes will be overwritten by the next build.
{% endcomment %}
{% case name %}
${iconCases}
{% endcase %}`
}

// Create destination directory if it doesn't exist
fs.mkdirSync(DEST_DIR, { recursive: true })

console.log('Copying Remix Icons...')

const copiedIcons = []

ICONS_NEEDED.forEach(iconName => {
  try {
    const iconPath = findIconFile(iconName, SOURCE_DIR)

    if (iconPath) {
      const destPath = path.join(DEST_DIR, `${iconName}${ICON_EXTENSION}`)
      fs.copyFileSync(iconPath, destPath)
      
      // Read SVG content for component generation
      const svgContent = fs.readFileSync(iconPath, 'utf8')
      copiedIcons.push({ name: iconName, content: svgContent })
      
      console.log(`✅ ${iconName}`)
    } else {
      console.log(`❌ ${iconName}`)
    }
  } catch (error) {
    console.log(`❌ ${iconName}: ${error.message}`)
  }
})

// Generate icon.liquid component
const iconComponent = generateIconComponent(copiedIcons)
const iconComponentPath = path.join(SNIPPETS_DIR, 'icon.liquid')
fs.writeFileSync(iconComponentPath, iconComponent)

console.log(`\nDone! Icons copied to ${DEST_DIR}`)
console.log(`Generated icon.liquid component with ${copiedIcons.length} icons`)
